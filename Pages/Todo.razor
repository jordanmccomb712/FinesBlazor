@page "/FindMyFine"
@using System.Text.Json
@using System.Text
@using System.Text.Json.Serialization
@inject StateContainer StateContainer
@inject IHttpClientFactory ClientFactory
@inject NavigationManager _navigationManager


@if(!StateContainer.startButtonPushed){
<button @onclick ="pushStart"> Start <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
    <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"></path>
  </svg></button>
}

@if(StateContainer.startButtonPushed){
<button @onclick ="pushReset"> Reset </button>
}
<br>
<br>
@if (StateContainer.startButtonPushed && StateContainer.foundUser == false)
{

    <input class="w-25" placeholder="Please enter your fine reference" @bind="fineID" />

    <button @onclick="RetrieveFineAsync"> Search </button>
}

<br>
<br>


@if (StateContainer.foundUser)
{
    <ol>
    <li>Fine ID: @StateContainer.myFine.FineID</li>
    <li>Name: @StateContainer.myFine.FullName</li>
    <li>Fine Amount: @StateContainer.myFine.AmountDue</li>
    <li>Has the fine been paid: @StateContainer.myFine.IsPaid</li>
    <li>Date Fine issued: @StateContainer.myFine.DateIssued</li>
</ol>
}
@if (StateContainer.foundUser && StateContainer.myFine.IsPaid == false)
{
    <br>
    <br>
    <button @onclick="gotoPayment"> Pay Now </button>
}

@if (StateContainer.foundUser && StateContainer.myFine.IsPaid == true)
{
    <br>
    <br>
    <h3>This fine has already been paid</h3>
}


@code {

    void pushStart(){
        StateContainer.startButtonPushed = true;
        _navigationManager.NavigateTo("/FindMyFine", true);

    }
     void pushReset(){
        StateContainer.startButtonPushed = false;
        StateContainer.foundUser = false;
        _navigationManager.NavigateTo("/FindMyFine", true);

    }

      void gotoPayment(){
        StateContainer.startButtonPushed = false;
        StateContainer.foundUser = false;
        _navigationManager.NavigateTo("/payment", true);

    }

    void NavigateToYourUrl(string page)
    {
     _navigationManager.NavigateTo("/FindMyFine", true);
    }
    

    //production
    private const string webApiUri = "https://fineapi.azurewebsites.net/api/Fines"; 
    //testing
    // private const string webApiUri = "http://localhost:5108/api/Fines";  
    private bool FineError;
    private bool shouldRender;
    private string? fineID = "";

    protected override bool ShouldRender() => shouldRender;
    
    
    protected async  Task RetrieveFineAsync()
    {
        if(fineID == String.Empty){
            return;
        }
        StateContainer.testID = fineID;
        var request = new HttpRequestMessage(HttpMethod.Get, webApiUri + "/" + fineID);
        request.Headers.Add("Accept", "application/json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);


        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            StateContainer.myFine = await JsonSerializer.DeserializeAsync<Fine>(responseStream);
            StateContainer.foundUser = true;
        }
        else
        {
            FineError = true;
        }

        shouldRender = true;

        


        //FOR TESTING PURPOSES

        Console.WriteLine(StateContainer.myFine.FineID);
        Console.WriteLine(StateContainer.myFine.FullName);
        Console.WriteLine(StateContainer.myFine.AmountDue);
        Console.WriteLine(StateContainer.myFine.DateIssued);
        Console.WriteLine(StateContainer.myFine.IsPaid);

        
    }
    
}
