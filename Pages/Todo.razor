@page "/todo"
@using System.Text.Json
@using System.Text
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory


<input placeholder="Please enter your fine reference" @bind="fineID"/>
<button @onclick ="RetrieveFineAsync"> Search </button>

<input placeholder="Please pay your fine reference" @bind="fineID"/>
<button @onclick ="PayFineAsync"> Pay </button>



@code {
    

    private const string webApiUri = "http://localhost:5108/api/Fines";
    private Fine newFine;
    
    private bool getTodoItemError;
    private bool shouldRender;
    private string? fineID = "";

    protected override bool ShouldRender() => shouldRender;
    

    /*
    private void AddTodo()
    {
        if(!string.IsNullOrWhiteSpace(newTodo))
        {
            OnPostAsync(new TodoItem { Id = 0, Name = newTodo, IsComplete = false});
            newTodo = string.Empty;
        }
    }
    */

    //method to get all todos from api

    
    
    protected async  Task RetrieveFineAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, webApiUri + "/" + fineID);
        request.Headers.Add("Accept", "application/json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);


        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            newFine = await JsonSerializer.DeserializeAsync<Fine>(responseStream);
        }
        else
        {
            getTodoItemError = true;
        }

        shouldRender = true;

        //todo, make this a return of a todoItems list, then add that to the post


        //FOR TESTING PURPOSES

        Console.WriteLine(newFine.FineID);
        Console.WriteLine(newFine.FullName);
        Console.WriteLine(newFine.AmountDue);
        Console.WriteLine(newFine.DateIssued);
        Console.WriteLine(newFine.IsPaid);
        
    }

     protected async  Task PayFineAsync()
    {
     
        newFine.IsPaid = true;

        var request = new HttpRequestMessage(HttpMethod.Put, webApiUri + "/" + fineID);
        request.Headers.Add("Accept", "application/json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");
        var jsonFine = JsonSerializer.Serialize(newFine);
        var content = new StringContent(jsonFine, Encoding.UTF8, "application/json");
        request.Content = content;

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
          
        }
        else
        {
            getTodoItemError = true;
        }

        shouldRender = true;
        
    }
    
}
